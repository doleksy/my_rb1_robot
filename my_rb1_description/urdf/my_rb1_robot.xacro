<?xml version="1.0" ?>

<robot name="RB1" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!--
    <xacro:include filename="$(find robot_description)/urdf/robot.gazebo" />
    -->

    <!-- Materials -->
    <material name="blue">
        <color rgba="0 0 ${204/255} 1"/>
    </material>

    <material name="dark_blue">
        <color rgba="${51/255} ${51/255} ${104/255} 1" />
    </material>

    <material name="red">
        <color rgba="${204/255} 0 0 1"/>
    </material>

    <material name="grey">
        <color rgba="${153/255} ${153/255} ${153/255} 1" />
    </material>

    <material name="dark_grey">
        <color rgba="${45/255} ${45/255} ${45/255} 1" />
    </material>

    <!-- Constants -->
    <xacro:property name="PI" value="3.1415926535897931"/>

    <!-- Macros -->
    <xacro:macro name="cylinder_inertia" params="m r h">
        <inertia
            ixx="${(m/12) * (3 * r*r + h*h)}" ixy = "0" ixz = "0"
            iyy="${(m/12) * (3 * r*r + h*h)}" iyz = "0"
            izz="${(m/2) * r*r}"
        /> 
    </xacro:macro>

    <xacro:macro name="sphere_interia" params="m r">
        <inertia
            ixx="${(2/5) * m * r*r}" ixy="0" ixz="0"
            iyy="${(2/5) * m * r*r}" iyz="0"
            izz="${(2/5) * m * r*r}"
        />
    </xacro:macro>

    <xacro:macro name="box_inertia" params="m x y z">
        <inertia
            ixx="${(m/12) * (x*x + z*z)}" ixy="0" ixz="0"
            iyy="${(m/12) * (y*y + x*x)}" iyz="0"
            izz="${(m/12) * (y*y + z*z)}"
        />
    </xacro:macro>


    <!-- Link - base -->
    <xacro:property name="base_r" value="0.25" />
    <xacro:property name="base_h" value="0.30" />
    <xacro:property name="base_m" value="20.74" />
    <link name="base_link">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <mass value="${base_m}" />
            <xacro:cylinder_inertia m="${base_m}" r="${base_r}" h="${base_h}" />
        </inertial>

        <collision>
            <geometry>
                <cylinder length="${base_h}" radius="${base_r}"/>
            </geometry>
        </collision>

        <visual>
            <geometry>
                <cylinder length="${base_h}" radius="${base_r}"/>
            </geometry>
            <material name="blue" />
        </visual>
    </link>


    <!-- Joint - base / base_footprint -->
    <joint name="base_to_base_footprint" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 -${base_h / 2}" />
        <parent link="base_link" />
        <child link="base_footprint" />
    </joint>

    <!-- Link - base_footprint -->
    <link name="base_footprint" />


    <!-- Wheel properties -->
    <xacro:property name="base_to_wheel_offset_y" value="0.2" />

    <xacro:property name="wheel_r" value="${0.05 / 2}" />
    <xacro:property name="wheel_h" value="0.03" />
    <xacro:property name="wheel_m" value="1" />

    <!-- Joint - base / left wheel -->
    <joint name="base_to_left_wheel" type="continuous">
        <origin rpy="0 0 0" xyz="0 ${base_to_wheel_offset_y} -${base_h / 2}" />
        <parent link="base_link" />
        <child link="left_wheel" />
        <axis rpy="0 0 0" xyz="0 1 0" />
        <limit effort="10000" velocity="1000" />
        <joint_properties damping="1.0" friction="1.0" />
    </joint>

    <!-- Link - left wheel -->
    <link name="left_wheel">
        <inertial>
            <mass value="${wheel_m}" />
            <origin xyz="0 0 0" rpy="0 0 0" />
            <xacro:cylinder_inertia m="${wheel_m}" r="${wheel_r}" h="${wheel_h}" />
        </inertial>

        <collision>
            <origin xyz="0 0 0" rpy="${PI/2} 0 0" />
            <geometry>
                <cylinder length="${wheel_h}" radius="${wheel_r}"/>
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0" rpy="${PI/2} 0 0" />
            <geometry>
                <cylinder length="${wheel_h}" radius="${wheel_r}"/>
            </geometry>
            <material name="red" />
        </visual>
    </link>

    <!-- Joint - base / right wheel -->
    <joint name="base_to_right_wheel" type="continuous">
        <origin rpy="0 0 0" xyz="0 -${base_to_wheel_offset_y} -${base_h / 2}" />
        <parent link="base_link" />
        <child link="right_wheel" />
        <axis rpy="0 0 0" xyz="0 1 0" />
        <limit effort="10000" velocity="1000" />
        <joint_properties damping="1.0" friction="1.0" />
    </joint>

    <!-- Link - right wheel -->
    <link name="right_wheel">
        <inertial>
            <mass value="${wheel_m}" />
            <origin xyz="0 0 0" rpy="0 0 0" />
            <xacro:cylinder_inertia m="${wheel_m}" r="${wheel_r}" h="${wheel_h}" />
        </inertial>

        <collision>
            <origin xyz="0 0 0" rpy="${PI/2} 0 0" />
            <geometry>
                <cylinder length="${wheel_h}" radius="${wheel_r}"/>
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0" rpy="${PI/2} 0 0" />
            <geometry>
                <cylinder length="${wheel_h}" radius="${wheel_r}"/>
            </geometry>
            <material name="red" />
        </visual>
    </link>

    <!-- Caster properties -->
    <xacro:property name="caster_r" value="${0.025 / 2}" />
    <xacro:property name="caster_m" value="1" />

    <!-- Joint - base / front caster -->
    <joint name="base_to_front_caster" type="fixed">
        <origin rpy="0 0 0" xyz="0.1 0 -${base_h / 2}" />
        <parent link="base_link" />
        <child link="front_caster" />
        <axis rpy="0 0 0" xyz="0 1 0" />
        <limit effort="10000" velocity="1000" />
        <joint_properties damping="1.0" friction="0" />
    </joint>

    <!-- Link - front caster -->
    <link name="front_caster">
        <inertial>
            <mass value="${caster_m}" />
            <origin xyz="0 0 0" rpy="0 0 0" />
            <xacro:sphere_interia m="${caster_m}" r="${caster_r}" />
        </inertial>

        <!-- Caster wheel support -->
        <collision>
            <origin rpy="0 0 0" xyz="0 0 ${caster_r/2}" />
            <geometry>
                <sphere radius="${caster_r * 2}" />
            </geometry>
        </collision>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 ${caster_r/2}" />
            <geometry>
                <sphere radius="${caster_r * 2}" />
            </geometry>
            <material name="dark_blue" />
        </visual>

        <!-- Caster wheel -->
        <collision>
            <origin rpy="0 0 0" xyz="0 0 -${caster_r}" />
            <geometry>
                <sphere radius="${caster_r}" />
            </geometry>
        </collision>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 -${caster_r}" />
            <geometry>
                <sphere radius="${caster_r}" />
            </geometry>
            <material name="grey" />
        </visual>
    </link>

    <!-- Joint - base / back caster -->
    <joint name="base_to_back_caster" type="fixed">
        <origin rpy="0 0 0" xyz="-0.1 0 -${base_h / 2}" />
        <parent link="base_link" />
        <child link="back_caster" />
        <axis rpy="0 0 0" xyz="0 1 0" />
        <limit effort="10000" velocity="1000" />
        <joint_properties damping="1.0" friction="0" />
    </joint>

    <!-- Link - back caster -->
    <link name="back_caster">
        <inertial>
            <mass value="${caster_m}" />
            <origin xyz="0 0 0" rpy="0 0 0" />
            <xacro:sphere_interia m="${caster_m}" r="${caster_r}" />
        </inertial>

        <!-- Caster wheel support -->
        <collision>
            <origin rpy="0 0 0" xyz="0 0 ${caster_r/2}" />
            <geometry>
                <sphere radius="${caster_r * 2}" />
            </geometry>
        </collision>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 ${caster_r/2}" />
            <geometry>
                <sphere radius="${caster_r * 2}" />
            </geometry>
            <material name="dark_blue" />
        </visual>

        <!-- Caster wheel -->
        <collision>
            <origin rpy="0 0 0" xyz="0 0 -${caster_r}" />
            <geometry>
                <sphere radius="${caster_r}" />
            </geometry>
        </collision>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 -${caster_r}" />
            <geometry>
                <sphere radius="${caster_r}" />
            </geometry>
            <material name="grey" />
        </visual>
    </link>

    <!-- Laser properties -->
    <xacro:property name="laser_x" value="${75.0 / 1000}" />
    <xacro:property name="laser_y" value="${60.0 / 1000}" />
    <xacro:property name="laser_z" value="${60.0 / 1000}" />
    <xacro:property name="laser_m" value="${260.0 / 1000}" />

    <!-- Joint - base / front laser -->
    <joint name="base_to_front_laser" type="fixed">
        <!-- rotate the laser by 180 degrees -->
        <origin rpy="${PI} 0 0" xyz="${base_r} 0 ${base_h / 4}" />
        <parent link="base_link" />
        <child link="front_laser" />
    </joint>

    <!-- Link - front laser -->
    <!-- Modeled after a Hokuyo UBG-04LX-F01 -->
    <link name="front_laser">
        <inertial>
            <mass value="${laser_m}" />
            <origin xyz="0 0 0" rpy="0 0 0" />
            <xacro:box_inertia m="${laser_m}" x="${laser_x}" y="${laser_y}" z="${laser_z}" />
        </inertial>

        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="${laser_x} ${laser_y}  ${laser_z}" />
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="${laser_x} ${laser_y}  ${laser_z}" />
            </geometry>
            <material name="dark_grey" />
        </visual>
    </link>


    <!-- Gazebo tags -->
    <gazebo reference="base_link">
        <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="base_to_left_wheel">
        <mu1>1</mu1>
        <mu2>1</mu2>
    </gazebo>
    <gazebo reference="base_to_right_wheel">
        <mu1>1</mu1>
        <mu2>1</mu2>
    </gazebo>

    <gazebo reference="base_to_front_caster">
        <preserveFixedJoint>true</preserveFixedJoint>
        <mu1>0</mu1>
        <mu2>0</mu2>
    </gazebo>
    <gazebo reference="base_to_back_caster">
        <preserveFixedJoint>true</preserveFixedJoint>
        <mu1>0</mu1>
        <mu2>0</mu2>
    </gazebo>

    <gazebo reference="base_to_front_laser">
        <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>

    <gazebo>
        <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
            <alwaysOn>true</alwaysOn>
            <updateRate>20</updateRate>
            <leftJoint>base_to_left_wheel</leftJoint>
            <rightJoint>base_to_right_wheel</rightJoint>
            <wheelSeparation>${base_to_wheel_offset_y * 2}</wheelSeparation>
            <wheelDiameter>${wheel_r * 2}</wheelDiameter>
            <torque>10</torque>
            <commandTopic>cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <robotBaseFrame>base_link</robotBaseFrame>
        </plugin>
    </gazebo>

    <gazebo reference="front_laser">
        <sensor type="ray" name="head_hokuyo_sensor">
            <pose>0 0 0 0 0 0</pose>
            <visualize>false</visualize>
            <update_rate>20</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>720</samples>
                        <resolution>1</resolution>
                        <min_angle>-1.570796</min_angle>
                        <max_angle>1.570796</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.20</min>
                    <max>10.0</max>
                    <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
                <topicName>/scan</topicName>
                <frameName>sensor_laser</frameName>
            </plugin>
        </sensor>
    </gazebo>

</robot>
